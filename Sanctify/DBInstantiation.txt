/*start table creation process*/

/*not yet complete*/
create table [User] (
username varchar(56),
password varchar(56) not null,
email varchar(80) not null,
first_name varchar(30),
last_name varchar(35),
primary key (username));

create table Employee(
username varchar(56),
salary numeric(8,2),
role varchar(16),
primary key (username),
foreign key (username) references [User],
check (salary > 0),
check (role in ('admin', 'developer', 'customer service')));

create table Customer(
username varchar(56),
sub_type varchar(4),
primary key (username),
foreign key (username) references [User],
check (sub_type in ('free', 'paid')));

create table ContentCreator(
username varchar(56),
commission numeric (4,2),
primary key (username),
foreign key (username) references [User],
check (commission > 0));

create table Praylist(
praylist_id  numeric(5,0) identity(1,1),
praylist_name varchar(56) not null,
description varchar(1000),
primary key (praylist_id));

create table User_Praylist(
username varchar(56),
praylist_id numeric(5,0),
primary key (username, praylist_id),
foreign key (username) references [User],
foreign key (praylist_id) references Praylist);

create table Content(
content_id numeric(5,0) identity(1,1),
type varchar(5),
content_name varchar(56) not null,
description varchar(1000),
visibility varchar(4),
primary key (content_id),
check (type in ('audio', 'text')),
check (visibility in ('free', 'paid'))); /*Changed Content to visibility*/

create table Praylist_Content(
praylist_id numeric(5,0),
content_id numeric(5,0),
primary key (praylist_id, content_id),
foreign key (praylist_id) references Praylist,
foreign key (content_id) references Content);

create table Favorites(
username varchar(56),
content_id numeric(5,0),
primary key (username, content_id),
foreign key(username) references [User],
foreign key(content_id) references Content);

create table Audio(
content_id numeric(5,0),
[file] varbinary(max),
primary key (content_id),
foreign key(content_id) references Content,
); /*file type checking - handle in application logic*/

create table [Text](
content_id numeric(5,0),
[file] nvarchar(max),
primary key (content_id),
foreign key (content_id) references Content,
); /*file type checking - handle in application logic*/

create table Album(
album_id numeric(5,0) identity(1,1), 
album_name varchar(56) not null,
primary key (album_id));

create table Content_Album(
content_id numeric(5,0),
album_id numeric(5,0),
primary key (content_id),
foreign key (content_id) references Content,
foreign key (album_id) references Album);

create table Category(
cat_name varchar(56),
primary key (cat_name));

create table Album_Category(
album_id numeric(5,0),
cat_name varchar(56),
primary key (album_id),
foreign key (album_id) references Album,
foreign key (cat_name) references Category);

create table Uploads(
username varchar(56),
content_id numeric(5,0),
primary key (content_id),
foreign key (username) references ContentCreator,
foreign key (content_id) references Content);

-- VIEWS

-- ROLES

create role Free_Customer;
grant select, update, delete, insert on User;
grant insert, select, delete on Praylist;
grant insert, select, delete on Praylist_Content;
grant select on FreeAudioContent;
grant select on FreeTextContent;
 
create role Paid_Customer;
grant Free to Paid;
grant select on PaidAudioContent;
grant select on PaidTextContent;

create role Employee;
grant Paid to Employee with grant option;
grant delete on Content, Audio, Text;

create role ContentCreator;
grant Paid to ContentCreator;
grant insert, delete on Content, Audio, Text;



